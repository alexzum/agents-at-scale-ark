replicaCount: 1

image:
  repository: {{ .Values.mcpServerName }}
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  tcpSocket:
    port: http
readinessProbe:
  tcpSocket:
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

{{- if .Values.requiresAuth }}
# Authentication configuration
auth:
  token: ""
  existingSecret: ""
  existingSecretKey: "token"
{{- end }}

{{- if .Values.hasCustomConfig }}
# Custom configuration
config:
  customValue: ""
{{- end }}

# MCP Server configuration
mcpServer:
  create: true
  name: ""
  description: "{{ .Values.description }}"
  path: "/mcp"
  # timeout: "30s"  # Uncomment and adjust for long-running operations (e.g., "5m", "10m")