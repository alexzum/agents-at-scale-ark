apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: delete-functionality-test
spec:
  description: Test delete functionality for ARK resources
  timeouts:
    apply: 60s
    assert: 120s
    cleanup: 60s
    delete: 60s
    error: 60s
    exec: 90s
  steps:
  - name: setup-test-resources
    try:
    - apply:
        file: manifests/a00-rbac.yaml
    - apply:
        file: manifests/a01-secret.yaml
    - apply:
        file: manifests/a02-model.yaml
    - apply:
        file: manifests/a03-agent.yaml
    - apply:
        file: manifests/a04-tool.yaml
    - apply:
        file: manifests/a05-team.yaml
    - apply:
        file: manifests/a06-query.yaml

  - name: verify-resources-created
    try:
    - assert:
        resource:
          apiVersion: ark.mckinsey.com/v1alpha1
          kind: Model
          name: test-delete-model
    - assert:
        resource:
          apiVersion: ark.mckinsey.com/v1alpha1
          kind: Agent
          name: test-delete-agent
    - assert:
        resource:
          apiVersion: ark.mckinsey.com/v1alpha1
          kind: Tool
          name: test-delete-tool
    - assert:
        resource:
          apiVersion: ark.mckinsey.com/v1alpha1
          kind: Team
          name: test-delete-team
    - assert:
        resource:
          apiVersion: ark.mckinsey.com/v1alpha1
          kind: Query
          name: test-delete-query

  - name: test-delete-model-api
    try:
    - script:
        content: |
          echo "Testing Model deletion via API..."
          
          # Delete model via API
          response=$(curl -s -w "%{http_code}" -X DELETE "http://ark-api.default.svc.cluster.local/v1/models/test-delete-model")
          status_code="${response: -3}"
          
          if [ "$status_code" = "204" ]; then
            echo "✓ Model deleted successfully"
          else
            echo "✗ Model deletion failed with status: $status_code"
            exit 1
          fi
          
          # Verify model is deleted
          response=$(curl -s -w "%{http_code}" "http://ark-api.default.svc.cluster.local/v1/models/test-delete-model")
          status_code="${response: -3}"
          
          if [ "$status_code" = "404" ]; then
            echo "✓ Model deletion verified"
          else
            echo "✗ Model still exists after deletion"
            exit 1
          fi

  - name: test-delete-agent-api
    try:
    - script:
        content: |
          echo "Testing Agent deletion via API..."
          
          # Delete agent via API
          response=$(curl -s -w "%{http_code}" -X DELETE "http://ark-api.default.svc.cluster.local/v1/agents/test-delete-agent")
          status_code="${response: -3}"
          
          if [ "$status_code" = "204" ]; then
            echo "✓ Agent deleted successfully"
          else
            echo "✗ Agent deletion failed with status: $status_code"
            exit 1
          fi
          
          # Verify agent is deleted
          response=$(curl -s -w "%{http_code}" "http://ark-api.default.svc.cluster.local/v1/agents/test-delete-agent")
          status_code="${response: -3}"
          
          if [ "$status_code" = "404" ]; then
            echo "✓ Agent deletion verified"
          else
            echo "✗ Agent still exists after deletion"
            exit 1
          fi

  - name: test-delete-tool-api
    try:
    - script:
        content: |
          echo "Testing Tool deletion via API..."
          
          # Delete tool via API
          response=$(curl -s -w "%{http_code}" -X DELETE "http://ark-api.default.svc.cluster.local/v1/tools/test-delete-tool")
          status_code="${response: -3}"
          
          if [ "$status_code" = "204" ]; then
            echo "✓ Tool deleted successfully"
          else
            echo "✗ Tool deletion failed with status: $status_code"
            exit 1
          fi
          
          # Verify tool is deleted
          response=$(curl -s -w "%{http_code}" "http://ark-api.default.svc.cluster.local/v1/tools/test-delete-tool")
          status_code="${response: -3}"
          
          if [ "$status_code" = "404" ]; then
            echo "✓ Tool deletion verified"
          else
            echo "✗ Tool still exists after deletion"
            exit 1
          fi

  - name: test-delete-team-api
    try:
    - script:
        content: |
          echo "Testing Team deletion via API..."
          
          # Delete team via API
          response=$(curl -s -w "%{http_code}" -X DELETE "http://ark-api.default.svc.cluster.local/v1/teams/test-delete-team")
          status_code="${response: -3}"
          
          if [ "$status_code" = "204" ]; then
            echo "✓ Team deleted successfully"
          else
            echo "✗ Team deletion failed with status: $status_code"
            exit 1
          fi
          
          # Verify team is deleted
          response=$(curl -s -w "%{http_code}" "http://ark-api.default.svc.cluster.local/v1/teams/test-delete-team")
          status_code="${response: -3}"
          
          if [ "$status_code" = "404" ]; then
            echo "✓ Team deletion verified"
          else
            echo "✗ Team still exists after deletion"
            exit 1
          fi

  - name: test-delete-query-api
    try:
    - script:
        content: |
          echo "Testing Query deletion via API..."
          
          # Delete query via API
          response=$(curl -s -w "%{http_code}" -X DELETE "http://ark-api.default.svc.cluster.local/v1/queries/test-delete-query")
          status_code="${response: -3}"
          
          if [ "$status_code" = "204" ]; then
            echo "✓ Query deleted successfully"
          else
            echo "✗ Query deletion failed with status: $status_code"
            exit 1
          fi
          
          # Verify query is deleted
          response=$(curl -s -w "%{http_code}" "http://ark-api.default.svc.cluster.local/v1/queries/test-delete-query")
          status_code="${response: -3}"
          
          if [ "$status_code" = "404" ]; then
            echo "✓ Query deletion verified"
          else
            echo "✗ Query still exists after deletion"
            exit 1
          fi

  - name: test-delete-nonexistent-resource
    try:
    - script:
        content: |
          echo "Testing deletion of non-existent resource..."
          
          # Try to delete non-existent model
          response=$(curl -s -w "%{http_code}" -X DELETE "http://ark-api.default.svc.cluster.local/v1/models/nonexistent-model")
          status_code="${response: -3}"
          
          if [ "$status_code" = "404" ]; then
            echo "✓ Non-existent model deletion returns 404 as expected"
          else
            echo "✗ Non-existent model deletion returned unexpected status: $status_code"
            exit 1
          fi

  - name: test-cli-memory-commands
    try:
    - script:
        content: |
          echo "Testing CLI memory commands..."
          
          # Test memory list command
          if ark memory list >/dev/null 2>&1; then
            echo "✓ Memory list command works"
          else
            echo "✗ Memory list command failed"
            exit 1
          fi
          
          # Test memory reset all command
          if ark memory reset all >/dev/null 2>&1; then
            echo "✓ Memory reset all command works"
          else
            echo "✗ Memory reset all command failed"
            exit 1
          fi
          
          # Test memory reset session command (with dummy session ID)
          if ark memory reset session dummy-session-id >/dev/null 2>&1; then
            echo "✓ Memory reset session command works"
          else
            echo "✗ Memory reset session command failed"
            exit 1
          fi
          
          # Test memory reset query command (with dummy IDs)
          if ark memory reset query dummy-session-id dummy-query-id >/dev/null 2>&1; then
            echo "✓ Memory reset query command works"
          else
            echo "✗ Memory reset query command failed"
            exit 1
          fi

  - name: cleanup-test-resources
    cleanup:
    - script:
        content: |
          echo "Cleaning up test resources..."
          
          # Clean up any remaining resources
          kubectl delete model test-delete-model --ignore-not-found=true
          kubectl delete agent test-delete-agent --ignore-not-found=true
          kubectl delete tool test-delete-tool --ignore-not-found=true
          kubectl delete team test-delete-team --ignore-not-found=true
          kubectl delete query test-delete-query --ignore-not-found=true
          
          echo "Cleanup completed"
