apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: langchain-weather-a2a-test
spec:
  skip: true
  description: Tests LangChain weather agent A2A integration with templated queries
  timeouts:
    apply: 60s
    cleanup: 60s
  steps:
    - name: setup-credentials-and-resources
      try:
        - script:
            skipLogOutput: true
            content: |
              set -u
              echo "{\"token\": \"$E2E_TEST_AZURE_OPENAI_KEY\", \"url\": \"$E2E_TEST_AZURE_OPENAI_BASE_URL\", \"city\": \"Chicago\"}"
            outputs:
              - name: azure
                value: (json_parse($stdout))
        - script:
            content: |
              helm install ark-tenant ../charts/ark-tenant --namespace $NAMESPACE --create-namespace --wait
            env:
            - name: NAMESPACE
              value: ($namespace)
        - apply:
            file: "manifests/a01-secret.yaml"
        - apply:
            file: "manifests/a02-configmap.yaml"
        - apply:
            file: "manifests/a04-model.yaml"
      catch:
        - events: {}

    - name: deploy-langchain-weather-service
      try:
        - script:
            content: |
              kubectl apply -f ../../samples/a2a/langchain-weather-agent/manifests.yaml --namespace $NAMESPACE
              kubectl wait --for=condition=ready pod -l app=langchain-weather-agent -n $NAMESPACE --timeout=60s
            env:
              - name: NAMESPACE
                value: ($namespace)
        - assert:
            resource:
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                name: langchain-weather-agent
              status:
                readyReplicas: 1
        - assert:
            resource:
              apiVersion: ark.mckinsey.com/v1prealpha1
              kind: A2AServer
              metadata:
                name: langchain-weather-agent
              status:
                (conditions[?type == 'Discovering'].status | [0]): "True"
                phase: ready
      catch:
        - events: {}
        - describe:
            apiVersion: apps/v1
            kind: Deployment
            name: langchain-weather-agent
        - describe:
            apiVersion: ark.mckinsey.com/v1prealpha1
            kind: A2AServer
            name: langchain-weather-agent

    - name: assert-weather-agent-created
      try:
        - assert:
            resource:
              apiVersion: ark.mckinsey.com/v1alpha1
              kind: Agent
              metadata:
                name: langchain-weather-reporter
                annotations:
                  ark.mckinsey.com/a2a-server-address: (not_null(@))
                  ark.mckinsey.com/a2a-server-name: (not_null(@))
                  ark.mckinsey.com/a2a-server-skills: (not_null(@))
                ownerReferences:
                  - apiVersion: ark.mckinsey.com/v1prealpha1
                    kind: A2AServer
                    name: langchain-weather-agent
              spec:
                description: (not_null(@))
                executionEngine:
                  name: a2a
      catch:
        - events: {}
        - describe:
            apiVersion: ark.mckinsey.com/v1alpha1
            kind: Agent
            name: langchain-weather-reporter

    # Test ark.mckinsey.com annotation inheritance from A2AServer to Agent
    - name: test-annotation-inheritance
      try:
        - apply:
            resource:
              apiVersion: ark.mckinsey.com/v1prealpha1
              kind: A2AServer
              metadata:
                name: test-annotation-server
                annotations:
                  ark.mckinsey.com/test-annotation: "test-value-123"
                  ark.mckinsey.com/dashboard-icon: "/icons/test.svg"
                  ark.mckinsey.com/team: "test-team"
              spec:
                address:
                  value: "http://host.minikube.internal:2973/a2a/agent/test_agent"
        - assert:
            resource:
              apiVersion: ark.mckinsey.com/v1alpha1
              kind: Agent
              metadata:
                annotations:
                  ark.mckinsey.com/test-annotation: "test-value-123"
                  ark.mckinsey.com/dashboard-icon: "/icons/test.svg"
                  ark.mckinsey.com/team: "test-team"
      catch:
        - events: {}
        - describe:
            apiVersion: ark.mckinsey.com/v1prealpha1
            kind: A2AServer
            name: test-annotation-server

    - name: test-templated-weather-query
      try:
        - apply:
            file: "manifests/a03-weather-query.yaml"
        - assert:
            resource:
              apiVersion: ark.mckinsey.com/v1alpha1
              kind: Query
              metadata:
                name: test-weather-query
              status:
                phase: done
      catch:
        - events: {}
        - describe:
            apiVersion: ark.mckinsey.com/v1alpha1
            kind: Query
            name: test-weather-query
