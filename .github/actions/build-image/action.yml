name: 'Build Image'
description: 'Builds a multi-platform container image using buildx'

inputs:
  path:
    description: 'Path to build context'
    required: true
  image:
    description: 'Image name (without registry prefix)'
    required: true
  tag:
    description: 'Image tag'
    required: true
  registry:
    description: 'Container registry (e.g. ghcr.io/org, registry.io)'
    required: false
    default: ''
  platforms:
    description: 'Target platforms (e.g. linux/amd64,linux/arm64)'
    required: false
    default: 'linux/amd64,linux/arm64'
  push:
    description: 'Whether to push the image to registry'
    required: false
    default: 'false'
  load:
    description: 'Whether to load the image to local docker (for single platform only)'
    required: false
    default: 'false'
  prebuild:
    description: 'Optional prebuild command to run before docker build'
    required: false
  build-args:
    description: 'Additional build arguments (multiline string)'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Run prebuild command
      if: ${{ inputs.prebuild }}
      shell: bash
      run: |
        echo "Running prebuild command: ${{ inputs.prebuild }}"
        ${{ inputs.prebuild }}
        
    - name: Build and optionally push
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.path }}
        platforms: ${{ inputs.platforms }}
        push: ${{ inputs.push }}
        load: ${{ inputs.load }}
        tags: ${{ inputs.registry && format('{0}/{1}:{2}', inputs.registry, inputs.image, inputs.tag) || format('{0}:{1}', inputs.image, inputs.tag) }}
        build-args: |
          VERSION=${{ inputs.tag }}
          GIT_COMMIT=${{ github.sha }}
          ${{ inputs.build-args }}
        cache-from: |
          type=gha
        cache-to: |
          type=gha,mode=min